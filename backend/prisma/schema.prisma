generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Match {
  id            String    @id
  user1Id       String
  user2Id       String
  createdAt     DateTime  @default(now())
  viewedByUser1 Boolean   @default(false)
  viewedByUser2 Boolean   @default(false)
  user1         User      @relation("Match_user1IdToUser", fields: [user1Id], references: [id], onDelete: Cascade)
  user2         User      @relation("Match_user2IdToUser", fields: [user2Id], references: [id], onDelete: Cascade)
  messages      Message[]

  @@unique([user1Id, user2Id])
  @@index([user1Id])
  @@index([user2Id])
}

model Message {
  id         String   @id
  matchId    String
  senderId   String
  receiverId String
  content    String
  read       Boolean  @default(false)
  createdAt  DateTime @default(now())
  match      Match    @relation(fields: [matchId], references: [id], onDelete: Cascade)
  receiver   User     @relation("Message_receiverIdToUser", fields: [receiverId], references: [id], onDelete: Cascade)
  sender     User     @relation("Message_senderIdToUser", fields: [senderId], references: [id], onDelete: Cascade)

  @@index([matchId])
  @@index([receiverId])
  @@index([senderId])
}

model Swipe {
  id        String   @id
  swiperId  String
  swipedId  String
  direction String
  createdAt DateTime @default(now())
  swiped    User     @relation("Swipe_swipedIdToUser", fields: [swipedId], references: [id], onDelete: Cascade)
  swiper    User     @relation("Swipe_swiperIdToUser", fields: [swiperId], references: [id], onDelete: Cascade)

  @@unique([swiperId, swipedId])
  @@index([swipedId])
  @@index([swiperId])
}

model User {
  id               String    @id
  email            String    @unique
  passwordHash     String
  name             String
  age              Int
  birthday         DateTime?
  showBirthday     Boolean   @default(false)
  gender           String
  lookingFor       String
  bio              String
  photoUrl         String
  photos           String[]
  province         String?
  city             String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime
  matchesAsUser1   Match[]   @relation("Match_user1IdToUser")
  matchesAsUser2   Match[]   @relation("Match_user2IdToUser")
  messagesReceived Message[] @relation("Message_receiverIdToUser")
  messagesSent     Message[] @relation("Message_senderIdToUser")
  swipesReceived   Swipe[]   @relation("Swipe_swipedIdToUser")
  swipesMade       Swipe[]   @relation("Swipe_swiperIdToUser")

  @@index([gender, lookingFor])
}
